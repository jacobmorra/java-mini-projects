//*****************************************************
//This program was created on Friday, November 27, 2015
//by Jacob Morra
//
//The purpose of this program is to generate random
//shapes; it contains a constructor which takes arguments
//for width and height of the random shape; it also contains
//the randomShape method which creates random shape objects 
//(Rectangle, Ellipse, or Line).
//******************************************************


//Import all libraries necessary for required visual functionalities of program
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;

//This library imported will enable the random methods to be accessed
import java.util.Random;

/**
 * This class provides a method to generate random shapes
 */
public class RandomShapeGenerator 
{
	//declare private instance variables 
	private Random generator; //declare instance of Random
	private int windowW; //integer stores window width
	private int windowH;//integer stores window height
	
	/** Construct a RandomShapeGenerator object.
	 *  @param w the width of the window
	 *  @param h the height of the window */	
	public RandomShapeGenerator(int w, int h)
	{
		//Construct the variables that will be used for creating the shapes of random sizes and locations
		generator = new Random();//initialize Random object
		windowW = w;//initialize windowW to argument w
		windowH = h;//initialize windowH to argument h
	}
	/** Generate a random shape.
	 *  @return a shape: Rectangle, Ellipse, or Line
	 */
	public Shape randomShape()
	{
		//This variable will create three possible numbers 
		int s = generator.nextInt(3);
      
		//These variables will denote the locations of the shape
		int x = generator.nextInt(windowW);
		int y = generator.nextInt(windowH);
		
      
		//Variables used to draw the line from a randomly specific point to another
		final int width = 50;
		final int height = 65;
		
      //Should the s variable be 0, depict the rectangle shape
		if (s == 0)
			return new Rectangle(x, y, width, height);
         
      //Should the s variable be 1, depict the ellipse shape
		else if (s ==1)
			return new Ellipse2D.Double(x, y, width, height);
               
      //Should the s variable be 2, depict a line
		else 
			return new Line2D.Double(x, y, x+width, y + height);
	}
}

